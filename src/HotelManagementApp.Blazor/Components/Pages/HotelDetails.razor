@page "/hotel/{hotelId:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Components.Authorization
@using System.Text.Json.Serialization

<PageTitle>@pageTitle</PageTitle>

<div class="container mt-4">
    @try
    {
        <!-- Loading state -->
        @if (isLoading)
        {
            <div class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Ładowanie...</span>
                </div>
                <p class="mt-3 text-muted">Wczytywanie szczegółów hotelu...</p>
            </div>
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <div>
                    @errorMessage
                    <div class="mt-2">
                        <button class="btn btn-sm btn-primary" @onclick="GoToHotels">
                            Powrót do listy hoteli
                        </button>
                        <button class="btn btn-sm btn-secondary ms-2" @onclick="LoadAllData">
                            Spróbuj ponownie
                        </button>
                    </div>
                </div>
            </div>
        }
        else if (hotel != null)
        {
            <!-- Breadcrumb -->
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/hotels" class="text-decoration-none">
                            <i class="bi bi-house-door"></i> Hotele
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        @GetSafeHotelName()
                    </li>
                </ol>
            </nav>

            <!-- Hotel header -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <h1 class="display-6 fw-bold text-primary mb-2">
                                        @GetSafeHotelName()
                                    </h1>
                                    <p class="text-muted mb-3">
                                        <i class="bi bi-geo-alt"></i>
                                        @GetSafeAddress()
                                    </p>
                                    @if (HasDescription())
                                    {
                                        <p class="lead">@GetSafeDescription()</p>
                                    }
                                </div>
                                <div class="col-md-4 text-end">
                                    @if (weather != null)
                                    {
                                        <div class="weather-card p-3 bg-light rounded">
                                            <h6 class="mb-2">
                                                <i class="bi bi-thermometer-half"></i> Aktualna pogoda
                                            </h6>
                                            <div class="h4 text-primary">@weather.Temperature°C</div>
                                            <small class="text-muted">w @GetSafeCity()</small>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Contact info -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-white border-0">
                            <h5 class="mb-0">
                                <i class="bi bi-telephone text-primary"></i> Kontakt
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <p class="mb-2">
                                        <strong>Telefon:</strong>
                                        @if (HasPhoneNumber())
                                        {
                                            <a href="tel:@GetSafePhoneNumber()" class="text-decoration-none ms-2">
                                                @GetSafePhoneNumber()
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted ms-2">Brak informacji</span>
                                        }
                                    </p>
                                </div>
                                <div class="col-md-6">
                                    <p class="mb-2">
                                        <strong>E-mail:</strong>
                                        @if (HasEmail())
                                        {
                                            <a href="mailto:@GetSafeEmail()" class="text-decoration-none ms-2">
                                                @GetSafeEmail()
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted ms-2">Brak informacji</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Hotel images -->
            @if (HasImages())
            {
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card border-0 shadow-sm">
                            <div class="card-header bg-white border-0">
                                <h5 class="mb-0">
                                    <i class="bi bi-images text-primary"></i> Galeria
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    @foreach (var image in GetSafeImages())
                                    {
                                        <div class="col-lg-4 col-md-6">
                                            <img src="@image" class="img-fluid rounded shadow-sm"
                                                 alt="@GetSafeHotelName()" style="height: 200px; width: 100%; object-fit: cover;"/>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Available Rooms Section -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-white border-0">
                            <h5 class="mb-0">
                                <i class="bi bi-door-open text-primary"></i> Dostępne pokoje
                            </h5>
                        </div>
                        <div class="card-body">
                            @if (HasRooms())
                            {
                                <div class="row g-4">
                                    @foreach (var room in rooms.Take(6))
                                    {
                                        <div class="col-lg-6 col-xl-4">
                                            <div class="card h-100 border border-light shadow-sm room-card">
                                                <div class="position-relative">
                                                    <img src="@GetRoomImage(room)" class="card-img-top"
                                                         style="height: 200px; object-fit: cover;"
                                                         alt="@GetRoomDisplayName(room)"/>
                                                    @if (room.DiscountPercent > 0)
                                                    {
                                                        <div class="position-absolute top-0 end-0 m-2">
                                                            <span class="badge bg-danger">-@room.DiscountPercent%</span>
                                                        </div>
                                                    }
                                                </div>
                                                <div class="card-body">
                                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                                        <div>
                                                            <h6 class="card-title mb-1">@GetRoomDisplayName(room)</h6>
                                                            <small class="text-muted">
                                                                <i class="bi bi-tag"></i> @(room.RoomType ?? "Standardowy")
                                                            </small>
                                                        </div>
                                                        <div class="text-end">
                                                            @if (room.DiscountPercent > 0)
                                                            {
                                                                <div class="text-muted text-decoration-line-through small">
                                                                    @room.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pl-PL"))
                                                                </div>
                                                                <div class="h6 text-success mb-0">
                                                                    @room.FinalPrice.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pl-PL"))
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="h6 text-primary mb-0">
                                                                    @room.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pl-PL"))
                                                                </div>
                                                            }
                                                            <small class="text-muted">za noc</small>
                                                        </div>
                                                    </div>
                                                    <AuthorizeView Roles="Guest">
                                                        <div class="d-grid">
                                                            <button class="btn btn-primary btn-sm" @onclick="() => GoToReservation(room.Id)">
                                                                <i class="bi bi-calendar-plus"></i> Zarezerwuj teraz
                                                            </button>
                                                        </div>
                                                    </AuthorizeView>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                
                                @if (rooms.Count > 6)
                                {
                                    <div class="text-center mt-4">
                                        <p class="text-muted">
                                            Pokazano 6 z @rooms.Count() dostępnych pokoi.
                                        </p>
                                    </div>
                                }
                            }
                            else if (roomsLoading)
                            {
                                <div class="text-center py-4">
                                    <div class="spinner-border spinner-border-sm" role="status"></div>
                                    <span class="ms-2">Ładowanie pokoi...</span>
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="bi bi-door-closed display-4 text-muted"></i>
                                    <p class="text-muted mt-2">Brak dostępnych pokoi w tym hotelu.</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Services and tabs section -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-white border-0">
                            <ul class="nav nav-tabs card-header-tabs" id="hotelTabs" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="services-tab" data-bs-toggle="tab"
                                            data-bs-target="#services" type="button" role="tab">
                                        <i class="bi bi-gear"></i> Usługi
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="parking-tab" data-bs-toggle="tab"
                                            data-bs-target="#parking" type="button" role="tab">
                                        <i class="bi bi-car-front"></i> Parking
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab"
                                            data-bs-target="#reviews" type="button" role="tab">
                                        <i class="bi bi-star"></i> Opinie
                                    </button>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body">
                            <div class="tab-content" id="hotelTabsContent">
                                <!-- Services tab -->
                                <div class="tab-pane fade show active" id="services" role="tabpanel">
                                    @if (HasServices())
                                    {
                                        <div class="row g-3">
                                            @foreach (var service in GetSafeServices())
                                            {
                                                <div class="col-md-6 col-lg-4">
                                                    <div class="d-flex align-items-center p-2 bg-light rounded">
                                                        <i class="bi bi-check-circle-fill text-success me-2"></i>
                                                        <span>@service</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else if (servicesLoading)
                                    {
                                        <div class="text-center py-3"><div class="spinner-border spinner-border-sm" role="status"></div><span class="ms-2">Ładowanie...</span></div>
                                    }
                                    else
                                    {
                                        <p class="text-muted">Brak dostępnych usług.</p>
                                    }
                                </div>
                                <!-- Parking tab -->
                                <div class="tab-pane fade" id="parking" role="tabpanel">
                                    @if (HasParkings())
                                    {
                                        <div class="row g-3">
                                            @foreach (var parking in GetSafeParkings())
                                            {
                                                <div class="col-md-6 col-lg-4">
                                                    <div class="d-flex align-items-center p-2 bg-light rounded">
                                                        <i class="bi bi-car-front-fill text-primary me-2"></i>
                                                        <span>@parking</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else if (parkingsLoading)
                                    {
                                        <div class="text-center py-3"><div class="spinner-border spinner-border-sm" role="status"></div><span class="ms-2">Ładowanie...</span></div>
                                    }
                                    else
                                    {
                                        <p class="text-muted">Brak dostępnego parkingu.</p>
                                    }
                                </div>
                                <!-- Reviews tab -->
                                <div class="tab-pane fade" id="reviews" role="tabpanel">
                                    @if (HasReviews())
                                    {
                                        @foreach (var review in GetSafeReviews().Take(5))
                                        {
                                            <div class="border-bottom pb-3 mb-3">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <div>
                                                        <strong>@(review.UserName ?? "Gość")</strong>
                                                        <div class="d-flex align-items-center mt-1">
                                                            @for (int i = 0; i < review.Rating; i++)
                                                            {
                                                                <i class="bi bi-star-fill text-warning"></i>
                                                            }
                                                            @for (int i = review.Rating; i < 5; i++)
                                                            {
                                                                <i class="bi bi-star text-muted"></i>
                                                            }
                                                            <span class="ms-2 small text-muted">(@review.Rating/5)</span>
                                                        </div>
                                                    </div>
                                                    <small class="text-muted">@review.Created.ToString("dd.MM.yyyy")</small>
                                                </div>
                                                <p class="mb-0">@(review.Content ?? "")</p>
                                                @if (review.ReviewImages?.Any() == true)
                                                {
                                                    <div class="mt-2 d-flex flex-wrap gap-2">
                                                        @foreach (var imageUrl in review.ReviewImages)
                                                        {
                                                            <img src="@imageUrl" class="rounded" style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;" alt="Zdjęcie do opinii"/>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        }
                                        @if (GetSafeReviews().Count() > 5)
                                        {
                                            <p class="text-center mb-0"><small class="text-muted">... i @(GetSafeReviews().Count() - 5) więcej opinii</small></p>
                                        }
                                    }
                                    else if (reviewsLoading)
                                    {
                                        <div class="text-center py-3"><div class="spinner-border spinner-border-sm" role="status"></div><span class="ms-2">Ładowanie...</span></div>
                                    }
                                    else
                                    {
                                        <p class="text-muted">Brak opinii dla tego hotelu.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Action buttons -->
            <div class="row">
                <div class="col-12 text-center">
                    <button class="btn btn-outline-secondary me-2" @onclick="GoToHotels"><i class="bi bi-arrow-left"></i> Powrót</button>
                    <button class="btn btn-success" @onclick="LoadAllData"><i class="bi bi-arrow-clockwise"></i> Odśwież</button>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-building display-1 text-muted"></i>
                <h3 class="mt-3">Brak danych hotelu</h3>
                <p class="text-muted">Nie udało się załadować informacji o hotelu.</p>
                <button class="btn btn-primary" @onclick="LoadAllData"><i class="bi bi-arrow-clockwise"></i> Spróbuj ponownie</button>
            </div>
        }
    }
    catch (Exception ex)
    {
        <div class="alert alert-danger">
            <h5>Błąd renderowania strony</h5><p>@ex.Message</p>
            <button class="btn btn-primary" @onclick="GoToHotels">Powrót do listy hoteli</button>
        </div>
    }
</div>

<style>
    .room-card:hover { transform: translateY(-2px); transition: transform 0.2s ease-in-out; }
    .room-card { transition: transform 0.2s ease-in-out; }
</style>

@code {
    [Parameter] public int HotelId { get; set; }

    private HotelDetailsViewModel? hotel;
    private WeatherViewModel? weather;
    private List<string>? services;
    private List<string>? parkings;
    private List<RoomViewModel>? rooms;
    private List<ReviewViewModel>? reviews;

    private bool isLoading = true;
    private bool servicesLoading = false;
    private bool parkingsLoading = false;
    private bool roomsLoading = false;
    private bool reviewsLoading = false;
    private string errorMessage = "";
    private string pageTitle = "Szczegóły hotelu - Hotel Management System";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            services = new List<string>();
            parkings = new List<string>();
            rooms = new List<RoomViewModel>();
            reviews = new List<ReviewViewModel>();

            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            if (!authState.User.Identity.IsAuthenticated)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }
            await LoadAllData();
        }
        catch (Exception ex)
        {
            errorMessage = $"Błąd inicjalizacji: {ex.Message}";
            isLoading = false;
            StateHasChanged();
        }
    }

    private string GetSafeHotelName() => hotel?.Name ?? "Hotel";
    private string GetSafeCity() => hotel?.City ?? "mieście";
    private string GetSafeAddress() => $"{hotel?.Address ?? ""}, {hotel?.City ?? ""}, {hotel?.Country ?? ""}".Trim(' ', ',');
    private string GetSafeDescription() => hotel?.Description ?? "";
    private string GetSafePhoneNumber() => hotel?.PhoneNumber ?? "";
    private string GetSafeEmail() => hotel?.Email ?? "";
    private bool HasDescription() => !string.IsNullOrEmpty(hotel?.Description);
    private bool HasPhoneNumber() => !string.IsNullOrEmpty(hotel?.PhoneNumber);
    private bool HasEmail() => !string.IsNullOrEmpty(hotel?.Email);
    private bool HasImages() => hotel?.Images?.Any() == true;
    private bool HasServices() => services?.Any() == true;
    private bool HasParkings() => parkings?.Any() == true;
    private bool HasRooms() => rooms?.Any() == true;
    private bool HasReviews() => reviews?.Any() == true;
    private IEnumerable<string> GetSafeImages() => hotel?.Images?.Take(6) ?? Enumerable.Empty<string>();
    private IEnumerable<string> GetSafeServices() => services ?? Enumerable.Empty<string>();
    private IEnumerable<string> GetSafeParkings() => parkings ?? Enumerable.Empty<string>();
    private IEnumerable<ReviewViewModel> GetSafeReviews() => reviews ?? Enumerable.Empty<ReviewViewModel>();
    private string GetRoomImage(RoomViewModel room) => room.RoomImages?.FirstOrDefault() ?? "/images/room-placeholder.jpg";
    private string GetRoomDisplayName(RoomViewModel room) => !string.IsNullOrEmpty(room.RoomName) ? room.RoomName : $"Pokój {room.Id}";

    private async Task LoadAllData()
    {
        try
        {
            await LoadHotelDetails();
            if (hotel != null)
            {
                pageTitle = $"{GetSafeHotelName()} - Hotel Management System";
                var tasks = new List<Task> { LoadWeather(), LoadServices(), LoadParkings(), LoadRooms(), LoadReviews() };
                await Task.WhenAll(tasks);
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Błąd ładowania danych: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadHotelDetails()
    {
        isLoading = true;
        errorMessage = "";
        try
        {
            var response = await Http.GetAsync($"api/hotel/{HotelId}");
            if (response.IsSuccessStatusCode) hotel = await response.Content.ReadFromJsonAsync<HotelDetailsViewModel>();
            else errorMessage = $"Błąd ładowania hotelu: {response.StatusCode}";
        }
        catch (Exception ex) { errorMessage = $"Błąd połączenia: {ex.Message}"; }
        finally { isLoading = false; }
    }

    private async Task LoadWeather()
    {
        try
        {
            var response = await Http.GetAsync($"api/hotel/weather/{HotelId}");
            if (response.IsSuccessStatusCode) weather = await response.Content.ReadFromJsonAsync<WeatherViewModel>();
        }
        catch { /* Ignoruj błędy */ }
    }

    private async Task LoadServices()
    {
        servicesLoading = true;
        try
        {
            var response = await Http.GetAsync($"api/hotel-services/get-by-hotel/{HotelId}");
            if (response.IsSuccessStatusCode)
            {
                var serviceObjects = await response.Content.ReadFromJsonAsync<List<ServiceViewModel>>();
                services = serviceObjects?.Select(s => s.Name ?? "").Where(s => !string.IsNullOrEmpty(s)).ToList() ?? new List<string>();
            }
        }
        catch (Exception ex) { Console.WriteLine($"Error loading services: {ex.Message}"); }
        finally { servicesLoading = false; }
    }

    private async Task LoadParkings()
    {
        parkingsLoading = true;
        try
        {
            var response = await Http.GetAsync($"api/hotel-parkings/get-by-hotel/{HotelId}");
            if (response.IsSuccessStatusCode)
            {
                var parkingObjects = await response.Content.ReadFromJsonAsync<List<ParkingViewModel>>();
                parkings = parkingObjects?.Select(p => $"{p.Type} - {p.Capacity} miejsc").ToList() ?? new List<string>();
            }
        }
        catch { /* Ignoruj błędy */ }
        finally { parkingsLoading = false; }
    }
    
    // =====================================
    // POPRAWIONA METODA ŁADOWANIA POKOI
    // =====================================
    private async Task LoadRooms()
    {
        roomsLoading = true;
        try
        {
            // Pobierz wszystkie pokoje z systemu
            var response = await Http.GetAsync("api/hotel-room/get-all");

            if (response.IsSuccessStatusCode)
            {
                var allRooms = await response.Content.ReadFromJsonAsync<List<RoomViewModel>>();
                // Filtruj po stronie klienta, aby wyświetlić tylko pokoje dla bieżącego hotelu
                rooms = allRooms?.Where(r => r.HotelId == HotelId).ToList() ?? new List<RoomViewModel>();
            }
            else
            {
                Console.WriteLine($"Error loading rooms from API: {response.StatusCode}");
                rooms = new List<RoomViewModel>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception while loading rooms: {ex.Message}");
            rooms = new List<RoomViewModel>();
        }
        finally
        {
            roomsLoading = false;
        }
    }

    private async Task LoadReviews()
    {
        reviewsLoading = true;
        try
        {
            var response = await Http.GetAsync($"api/review/hotel/{HotelId}");
            if (response.IsSuccessStatusCode)
            {
                reviews = await response.Content.ReadFromJsonAsync<List<ReviewViewModel>>() ?? new List<ReviewViewModel>();
            }
        }
        catch (Exception ex) { Console.WriteLine($"Error loading reviews: {ex.Message}"); }
        finally { reviewsLoading = false; }
    }

    private void GoToHotels() => NavigationManager.NavigateTo("/hotels");
    private void GoToReservation(int roomId) => NavigationManager.NavigateTo($"/reservation/{roomId}");

    public class HotelDetailsViewModel { public int Id { get; set; } public string Name { get; set; } = ""; public string Address { get; set; } = ""; public string City { get; set; } = ""; public string Country { get; set; } = ""; public string PhoneNumber { get; set; } = ""; public string Email { get; set; } = ""; public string Description { get; set; } = ""; public List<string> Images { get; set; } = new(); }
    public class WeatherViewModel { public double Temperature { get; set; } }
    public class ServiceViewModel { public string Name { get; set; } = ""; }
    public class ParkingViewModel { public string Type { get; set; } = ""; public int Capacity { get; set; } }

    public class RoomViewModel { public int Id { get; set; } public int HotelId { get; set; } public string RoomName { get; set; } = ""; public string RoomType { get; set; } = ""; public decimal Price { get; set; } public int DiscountPercent { get; set; } public decimal FinalPrice { get; set; } public List<string>? RoomImages { get; set; } = new(); }

    public class ReviewViewModel { [JsonPropertyName("id")] public int Id { get; set; } [JsonPropertyName("userName")] public string? UserName { get; set; } [JsonPropertyName("rating")] public int Rating { get; set; } [JsonPropertyName("review")] public string? Content { get; set; } [JsonPropertyName("created")] public DateTime Created { get; set; } [JsonPropertyName("reviewImages")] public List<string>? ReviewImages { get; set; } }
}