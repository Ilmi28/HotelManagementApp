@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="modern-page">
    <header class="modern-header">
        <NavMenu />
    </header>

    <main class="modern-main">
        <div class="container">
            @Body
        </div>
    </main>

    <footer class="modern-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <h5>Hotel Management System</h5>
                    <p>Kompleksowy system zarządzania hotelem.</p>
                </div>
                <div class="col-md-4">
                    <h5>Kontakt</h5>
                    <p>
                        <i class="bi bi-envelope"></i> kontakt@hotelmanagement.pl<br />
                        <i class="bi bi-telephone"></i> +48 123 456 789
                    </p>
                </div>
                <div class="col-md-4">
                    <h5>Linki</h5>
                    <ul class="list-unstyled">
                        <li><a href="/about">O nas</a></li>
                        <li><a href="/privacy">Polityka prywatności</a></li>
                        <li><a href="/terms">Regulamin</a></li>
                    </ul>
                </div>
            </div>
            <hr />
            <p class="text-center">&copy; 2025 Hotel Management System. Wszelkie prawa zastrzeżone.</p>
        </div>
    </footer>
</div>

<div id="blazor-error-ui">
    Wystąpił nieobsługiwany błąd.
    <a href="" class="reload">Odśwież</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [Inject] HotelManagementApp.Blazor.Auth.ITokenService TokenService { get; set; }

    private async Task BeginLogout()
    {
        await TokenService.RemoveTokensAsync();
        var customAuthStateProvider = AuthStateProvider as HotelManagementApp.Blazor.Auth.CustomAuthStateProvider;
        customAuthStateProvider?.NotifyAuthenticationStateChanged();
        NavigationManager.NavigateTo("/");
    }
}